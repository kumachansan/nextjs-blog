import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from '../styles/Home.module.css';
import Layouts, { siteTitle } from '../components/Layouts';
import utilStyles from "../styles/utils.module.css";
import { getSortedPostsData } from '../lib/post';
//import Date from "../components/date";

//import { waitUntilSymbol } from 'next/dist/server/web/spec-extension/fetch-event'

//SSGの場合　//外部(サーバ)から一度だけ値を取ってくる関数　//プレレンダリング手法
export async function getStaticProps() {
  const allPostsData = getSortedPostsData(); //ID Data title thumbnail
  console.log(allPostsData)

  return {
    props: {//next.js特有の書き方。allPostsDataをpropsという形にして返す。受け取り先はHome({allPostsData}).
      allPostsData,
    },
  };
}
//SSRの場合。クライアント側が更新頻度が高いプロフィール更新などで利用
// export async function getServerSideProps(context){
//   //contextはクライアントがリクエストした情報を書く
//   return {
//     props: {
//       //コンポーネントに渡すためのprops
//     }
// }


export default function Home({ allPostsData }) {
  return (
    //homeというコンポーネントがついてるものだけプロフィールIMGを大きくする
    //{siteTitle}=ブラウザのタブに表示されるブログタイトル
    <Layouts home>
      <Head>
        <title>{siteTitle}</title>
      </Head>
      <section className={utilStyles.headingMd}>
        <p>ビズ兄です。最近プログラミングや絵を始めました.エンジニア図解やアートを展示していきます.</p>
      </section>

      {/* gridで表示したい */}
      <section className={`${utilStyles.headingMd} ${utilStyles.padding1px}`}>

        <h2 className={utilStyles.headingLg}>🗒図解エンジニアブログ</h2>

        <div className={`${styles.grid}`}>
          {allPostsData.map(({ id, date, title, thumbnail }) => (
            <article key={id}>

              <Link href={`/posts/${id}`}>
                <img
                  src={`${thumbnail}`}
                  className={`${styles.thumbnailImage}`}
                />
              </Link>

              <Link href={`/posts/${id}`}>
                <a className={utilStyles.boldText}>{title}</a>
              </Link>

              <br />
              <small className={utilStyles.lightText}>
                {date}
                {/*<Date dateString={date} />*/}
              </small>
            </article>
          ))}

        </div>
      </section>
    </Layouts >
  )
}
//publicフォルダの中にイメージなどは入れていく.publicは省略できる↓
//<Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
/*{ 
  <div className={styles.container}>
      <Head>
        <title>Next.js Blog App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    </div>
  <main className={styles.main}>
<h1 className={styles.title}>
  Welcome to  <Link href="/posts/firstPost">Next.js!</Link>
</h1>

<p className={styles.description}>
  Get started by editing{' '}
  <code className={styles.code}>pages/index.js</code>
</p>

<div className={styles.grid}>
  <a href="https://nextjs.org/docs" className={styles.card}>
    <h2>Documentation &rarr;</h2>
    <p>Find in-depth information about Next.js features and API.</p>
  </a>

  <a href="https://nextjs.org/learn" className={styles.card}>
    <h2>Learn &rarr;</h2>
    <p>Learn about Next.js in an interactive course with quizzes!</p>
  </a>

  <a
    href="https://github.com/vercel/next.js/tree/canary/examples"
    className={styles.card}
  >
    <h2>Examples &rarr;</h2>
    <p>Discover and deploy boilerplate example Next.js projects.</p>
  </a>

  <a
    href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
    className={styles.card}
  >
    <h2>Deploy &rarr;</h2>
    <p>
      Instantly deploy your Next.js site to a public URL with Vercel.
    </p>
  </a>
</div>
</main>

<footer className={styles.footer}>
<a
  href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
  target="_blank"
  rel="noopener noreferrer"
>
  Powered by{' '}
  <span className={styles.logo}>
    <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
  </span>
</a>
</footer> }*/
